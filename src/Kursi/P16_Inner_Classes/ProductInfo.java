package Kursi.P16_Inner_Classes;

/*Программа для учета продаж и выписки чеков в магазине должна обеспечивать учет транзакций и печать чеков.
Требуется реализовать логику приложения в соответствии со следующими требованиями.

+ 1. Реализовать абстрактный класс ProductInfo, содержащий в себе: String name — наименование продукта; double price — цена продукта.

+ 2. Реализовать класс Transaction, содержащий в себе:
поле private double price с геттером для него;
конструктор по умолчанию;
приватное поле, обозначающее налог: double tax=1.2;
метод double dealPrice(), который возвращает price*tax (цена сделки с учетом налога);
метод private void printCheck(double price), который с помощью метода println выводит на экран строку: «price: USD»,
цена должна вывод. с точностью до 0.00, метод должен использовать метод String.format для формиров. строки для вывода на экран;
public void printCheck, который не принимает параметров,и с помощью метода printCheck с параметром выводит на экран строку в формате:
«Order price: USD
Total price: USD»;
где price – значение соответствующего поля класса Transaction, а total price – результат вычисления tax*price.

+ 3. Реализовать внутренний класс TransactionItem в классе Transaction, содержащий в себе:
метод getTransaction(), с помощью которого будет осуществляться доступ к объекту внешнего класса;
поле private double price – цена единицы товара; поле private String name – название товара;
конструктор, принимающий в качестве параметров наименование и стоимость товара;
конструктор должен присваивать значение «Default» имени, если переданный параметр был пустым,
состоял из одних пустых символов (пробелов, табуляции, переводов строк и т.д.) или был не определен;
конструктор должен присваивать значение 0 цене продукта, если переданный параметр не был положительным числом;
кроме того, в конструкторе должно увеличиваться значение price внешнего класса на значение price внутреннего класса;
метод void printInfo(), который выводит на экран строку: «Item: , » методом printf и вызывает метод printCheck()
внешнего класса с параметром, равным price объекта внутреннего класса.

4.	Реализовать класс Receipt, содержащий в себе:
публичный статичный метод printReceipt, принимающий в качестве параметра массив элементов ProductInfo;
метод должен создавать транзакцию на основе массива ProductInfo,
наполнять ее записями и выводить на экран информацию о чеке в формате:
«Item: , price: USD
Item: , price: USD
…..
Order price: USD
Total price: USD»;
публичный статичный метод printTransactionInfo, принимающий в качестве параметра экземпляр класса TransactionItem и выводящий
на экран общую сумму транзакции, частью которой является переданный параметр в формате:
«Order price: USD
Total price: USD». */


// задание не успел выполнить
// послений ответ от препода:
// 1) зачем тебе их переопределять если они есть в родителе
// 2)TransactionItem что то не так с конструктором

public abstract class ProductInfo {
    protected String name;    // наименование продукта;
    protected double price;   // цена продукта.
}
